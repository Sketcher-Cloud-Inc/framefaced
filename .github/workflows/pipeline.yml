name: Pipeline

on: [ push, pull_request ]

jobs:
  tests:
    name: Tests (Endpoints & Providers)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Download pipeline environment variables
        run: curl -o ./.env https://gist.githubusercontent.com/SimonRTC/6676d69f8cdc16608f7670b9b47448d1/raw/4b7e0348fb27d3771e1d5b7c3cfe9c4436cb3b29/.env

      - name: Installation of PHP and its required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: bcmath, calendar, Core, ctype, curl, date, dom, filter, hash, iconv, json, libxml, mbstring, mongodb, openssl, pcre, PDO, Phar, Reflection, SimpleXML, SPL, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib

      - name: Install composer dependencies
        uses: php-actions/composer@v6
        with:
          dev: yes
          version: 2
          php_version: 8.0
          only_args: --ignore-platform-reqs

      - name: Update permissions for runner
        run: sudo chmod -R 777 ./

      - name: Initializing sample databases
        run: |
          ./bin/console databases --falsifications --CrashOnFailure
          ./bin/console databases --import --CrashOnFailure

      - name: Launch of tests on Providers and Endpoints (Apps)
        run: ./bin/console tests --debug --CrashOnFailure

      - name: Archive databases falsifications
        uses: actions/upload-artifact@v2
        with:
          name: databases
          path: src/Tests/dump/*

  build:
    name: Compilation (composer)
    needs: [tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Installation of PHP and its required extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: bcmath, calendar, Core, ctype, curl, date, dom, filter, hash, iconv, json, libxml, mbstring, mongodb, openssl, pcre, PDO, Phar, Reflection, SimpleXML, SPL, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib

      - name: Install composer dependencies
        uses: php-actions/composer@v6
        with:
          dev: no
          version: 2
          php_version: 8.0
          only_args: --ignore-platform-reqs

      - name: Dump autoload
        uses: php-actions/composer@v6
        with:
          command: dump-autoload
          only_args: -o --no-dev --no-interaction --classmap-authoritative

      - name: Archive builded application
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            public/
            vendor/
            src/
            !src/Tests/
            vendor/
            composer.json
            composer.lock

  deploy_alpine:
    name: Deployment (alpine)
    needs: [tests, build]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Declaration of runner environment variables
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Download builded application
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./dist/

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: docker.pkg.github.com/${{ secrets.ORGANIZATION_NAME }}/framefaced/alpine:${{ env.RELEASE_VERSION }}